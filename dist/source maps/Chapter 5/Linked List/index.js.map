{"version":3,"sources":["Chapter 5/Linked List/index.js"],"names":[],"mappings":";;;;;;;;;;;;oBAAiB,QAAQ;;;;IAEnB,UAAU;AACH,WADP,UAAU,GACA;0BADV,UAAU;;AAEZ,QAAI,CAAC,KAAK,GAAG,SAAS,CAAC;GACxB;;eAHG,UAAU;;WAIP,mBAAG;AACR,aAAO,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC;KACjC;;;WAEU,qBAAC,GAAG,EAAE,MAAM,EAAE;AACvB,UAAI,IAAI,GAAG,sBAAS,GAAG,EAAE,MAAM,CAAC,CAAC;AACjC,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;AACvB,UAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KACnB;;;WAEU,uBAAG;AACZ,UAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;AACnB,YAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;AACtB,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AAC7B,eAAO,IAAI,CAAC;OACb,MAAM,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;KACpD;;;WAEG,cAAC,GAAG,EAAE;AACR,UAAI,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,SAAS,CAAC;AACrC,UAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;AACzB,aAAO,OAAO,CAAC,GAAG,KAAK,GAAG,EAAE;AAC1B,YAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAC5B,OAAO,SAAS,CAAC,KACd,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;OAC7B;AACD,aAAO,OAAO,CAAC;KAChB;;;WACK,iBAAC,GAAG,EAAE;AACV,UAAI,IAAI,CAAC,OAAO,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAChE,UAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;AACzB,UAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;AAC1B,aAAO,OAAO,CAAC,GAAG,KAAK,GAAG,EAAE;AAC1B,YAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAC5B,OAAO,SAAS,CAAC,KACd;AACH,kBAAQ,GAAG,OAAO,CAAC;AACnB,iBAAO,GAAG,OAAO,CAAC,IAAI,CAAC;SACxB;OACF;AACD,UAAI,OAAO,KAAK,IAAI,CAAC,KAAK,EAAE;AAC1B,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;OAC9B,MAAM,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AACpC,aAAO,OAAO,CAAC;KAChB;;;WACI,iBAAG;AACN,aAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACrC,UAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;AACzB,aAAO,OAAO,KAAK,SAAS,EAAE;AAC5B,YAAI,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EACrC,OAAO,CAAC,KAAK,EAAE,CAAC;AAClB,eAAO,GAAG,OAAO,CAAC,IAAI,CAAC;OACxB;KACF;;;SAzDG,UAAU;;;qBA2DD,UAAU","file":"Chapter 5/Linked List/index.js","sourcesContent":["import Link from './link';\n\nclass LinkedList {\n  constructor() {\n    this.first = undefined;\n  }\n  isEmpty() {\n    return this.first === undefined;\n  }\n\n  insertFirst(int, double) {\n    var link = new Link(int, double);\n    link.next = this.first;\n    this.first = link;\n  }\n\n  deleteFirst() {\n    if (!this.isEmpty()) {\n      var link = this.first;\n      this.first = this.first.next;\n      return link;\n    } else throw new Error('The linked list is empty');\n  }\n\n  find(key) {\n    if (this.isEmpty()) return undefined;\n    var current = this.first;\n    while (current.int !== key) {\n      if (current.next === undefined)\n        return undefined;\n      else current = current.next;\n    }\n    return current;\n  }\n  delete(key) {\n    if (this.isEmpty()) throw new Error('The linked list is empty');\n    var current = this.first;\n    var previous = this.first;\n    while (current.int !== key) {\n      if (current.next === undefined)\n        return undefined;\n      else {\n        previous = current;\n        current = current.next;\n      }\n    }\n    if (current === this.first) {\n      this.first = this.first.next;\n    } else previous.next = current.next;\n    return current;\n  }\n  print() {\n    console.log('List (first-->last) :');\n    var current = this.first;\n    while (current !== undefined) {\n      if (typeof current.print === 'function')\n        current.print();\n      current = current.next;\n    }\n  }\n}\nexport default LinkedList;"],"sourceRoot":"/source/"}
{"version":3,"sources":["Chapter 4/Stack/Examples/example2.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;gBAEK,KAAK;;;;kBACR,IAAI;;;;IAEb,cAAc;AACP,WADP,cAAc,CACN,KAAK,EAAE;0BADf,cAAc;;AAEhB,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;GACpB;;eAHG,cAAc;;WAIb,iBAAG;AACN,UAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AAC/B,UAAI,KAAK,GAAG,kBAAU,MAAM,CAAC,CAAC;AAC9B,WAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;AACtD,YAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7B,gBAAQ,IAAI;AACZ,eAAK,GAAG,CAAC;AACT,eAAK,GAAG,CAAC;AACT,eAAK,GAAG;AACN,iBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjB,kBAAM;AAAA,AACR,eAAK,GAAG,CAAC;AACT,eAAK,GAAG,CAAC;AACT,eAAK,GAAG;AACN,gBAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;AACpB,kBAAI,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AACvB,kBAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAC9B,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAC5B,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,EAC5B,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;aACjE;;AAED,kBAAM;AAAA,SACP;OACF;AACD,UAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAClB,OAAO,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;KACpD;;;SA/BG,cAAc;;;AAkCpB,gBAAG,IAAI,CAAC;AACN,UAAQ,EAAE,iBAAiB;CAC5B,EAAE,UAAU,MAAM,EAAE;AACnB,MAAI,OAAO,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC;AACzC,SAAO,CAAC,KAAK,EAAE,CAAC;CACjB,CAAC,CAAC","file":"Chapter 4/Stack/Examples/example2.js","sourcesContent":["'use strict';\n\nimport Stack from '../';\nimport io from 'io';\n\nclass BracketChecker {\n  constructor(input) {\n    this.input = input;\n  }\n  check() {\n    var length = this.input.length;\n    var stack = new Stack(length);\n    for (var index = 0; index < this.input.length; index++) {\n      var char = this.input[index];\n      switch (char) {\n      case '{':\n      case '[':\n      case '(':\n        stack.push(char);\n        break;\n      case '}':\n      case ']':\n      case ')':\n        if (!stack.isEmpty()) {\n          var next = stack.pop();\n          if (char === '}' && next !== '{' ||\n            char === ']' && next !== '[' ||\n            char === ')' && next !== '(')\n            console.error('Error: ' + '\\'' + char + '\\'' + 'at ' + index);\n        }\n\n        break;\n      }\n    }\n    if (!stack.isEmpty())\n      console.error('Error: missing right delimiter.');\n  }\n}\n\nio.read({\n  question: 'Enter a string:'\n}, function (answer) {\n  var checker = new BracketChecker(answer);\n  checker.check();\n});"],"sourceRoot":"/source/"}
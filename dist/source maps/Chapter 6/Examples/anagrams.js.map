{"version":3,"sources":["Chapter 6/Examples/anagrams.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;IAEP,OAAO;AACA,WADP,OAAO,CACC,IAAI,EAAE;0BADd,OAAO;;AAET,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACjC,QAAI,CAAC,KAAK,GAAG,CAAC,CAAC;GAChB;;eALG,OAAO;;WAMJ,iBAAC,MAAM,EAAE;AACd,UAAI,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AACvC,UAAI,MAAM,KAAK,CAAC,EAAE,OAAO;AACzB,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;;AAE/B,YAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;AAEzB,YAAI,MAAM,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;AAC9B,YAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;OACrB;KACF;;;WACG,gBAAG;AACL,UAAI,IAAI,CAAC,KAAK,GAAG,EAAE,EACjB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5B,UAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAChB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5B,aAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;AACzC,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EACvC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,aAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC5B,UAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EACtB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;KACnB;;;WACK,gBAAC,MAAM,EAAE;AACb,UAAI,CAAC,GAAG,CAAC,CAAC;AACV,UAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzC,UAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAChC,WAAK,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,YAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OACnC;AACD,UAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;KAC1B;;;SArCG,OAAO;;;AAwCb,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;;qBAEf,OAAO","file":"Chapter 6/Examples/anagrams.js","sourcesContent":["'use strict';\n\nclass Anagram {\n  constructor(word) {\n    this.word = word;\n    this.stack = this.word.split('');\n    this.count = 0;\n  }\n  anagram(length) {\n    if (!length) length = this.word.length;\n    if (length === 1) return;\n    for (var i = 0; i < length; i++) {\n\n      this.anagram(length - 1);\n\n      if (length === 2) this.show();\n      this.rotate(length);\n    }\n  }\n  show() {\n    if (this.count < 99)\n      process.stdout.write(' ');\n    if (this.count < 9)\n      process.stdout.write(' ');\n    process.stdout.write(++this.count + ' ');\n    for (var j = 0; j < this.word.length; j++)\n      process.stdout.write(this.stack[j]);\n    process.stdout.write('   ');\n    if (this.count % 6 === 0)\n      console.log('');\n  }\n  rotate(length) {\n    let j = 0;\n    let position = this.word.length - length;\n    let temp = this.stack[position];\n    for (j = position + 1; j < this.word.length; j++) {\n      this.stack[j - 1] = this.stack[j];\n    }\n    this.stack[j - 1] = temp;\n  }\n}\n\nnew Anagram('cats').anagram();\n\nexport default Anagram;"],"sourceRoot":"/source/"}